import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { useSession, signIn, signOut } from "next-auth/react";
import { env } from "../env/client.mjs";

const Home: NextPage = () => {
  const addMessage = trpc.useMutation("message.add");
  const deleteMessage = trpc.useMutation("message.delete");
  const [message, setMessage] = useState("");
  const { data: session } = useSession();
  const messages = trpc.useQuery(["message.retrieve"]);

  const handleSubmitMessage = () => {
    addMessage.mutate({
      message,
      author: session?.user?.name ? session?.user.name : "Anonymous",
    });
    setMessage("");
  };
  return (
    <>
      <Head>
        <title>Message Me</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-3xl md:text-[3rem] leading-normal font-extrabold text-gray-700">
          {session?.user?.email !== env.NEXT_PUBLIC_ADMIN_EMAIL
            ? `Message me${
                session?.user?.name ? ` as ${session?.user?.name}` : ""
              }:`
            : "Messages"}
        </h1>
        {session?.user?.email !== env.NEXT_PUBLIC_ADMIN_EMAIL ? (
          <>
            <input
              className="p-4 border-2 border-slate-700 mb-5 rounded-l w-full font-semibold"
              onChange={(e) => setMessage(e.target.value)}
              value={message}
            />
            <button
              className="bg-blue-500 p-4 mb-3 text-2xl font-semibold"
              onClick={handleSubmitMessage}
            >
              Submit message
            </button>
          </>
        ) : (
          <div className="flex flex-col gap-3 max-w-[80%] pb-4">
            {typeof messages?.data === "string" &&
              JSON.parse(messages?.data)?.map(
                ({ messageId, message, author }: Message) => (
                  <div
                    className="flex flex-col rounded-xl border-4 border-slate-700 p-4 pr-14"
                    key={messageId}
                  >
                    <h2 className="text-xl font-bold block">{author}</h2>
                    <p className="py-2">{message}</p>
                    <button
                      className="bg-red-600 p-3"
                      onClick={() => {
                        deleteMessage.mutate(messageId);
                      }}
                    >
                      Delete message
                    </button>
                  </div>
                ),
              )}
          </div>
        )}
        <button
          className="px-3 py-4 md:px-5 bg-red-500 text-2xl font-semibold"
          onClick={() => (!session ? signIn("google") : signOut())}
        >
          {!session ? "Login to reveal your identity" : "Logout"}
        </button>
      </main>
    </>
  );
};

export default Home;

type Message = {
  messageId: string;
  message: string;
  author: string;
};
